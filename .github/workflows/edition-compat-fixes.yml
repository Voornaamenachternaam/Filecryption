name: Edition Compatibility Fixes

on:
  workflow_dispatch:
  schedule:
    - cron: "0 5 * * *" # weekly Monday 05:00 UTC

permissions:
  issues: write
  pull-requests: write
  contents: write

env:
  BRANCH_PREFIX: ci/edition-fix
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  edition-fix:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Ensure Rust stable installed
        run: |
          rustup install stable
          rustup default stable
          rustc -V
          cargo -V

      - name: Run cargo fix --edition per crate, collect build status
        id: run_fixes
        run: |
          shopt -s globstar nullglob
          rm -f build-failures.txt || true
          any_manifest=false
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          for manifest in **/Cargo.toml; do
            case "$manifest" in
              */target/*) continue ;;
            esac
            any_manifest=true
            dir=$(dirname "$manifest")
            echo ">> Running cargo fix --edition in $dir"
            (cd "$dir" && cargo fix --edition --allow-dirty --allow-staged) || echo "cargo fix failed in $dir (continuing)"

            echo ">> Building $dir to detect issues"
            if (cd "$dir" && cargo build --all-targets); then
              echo "Build OK for $dir"
            else
              echo "Build FAILED for $dir"
              echo "FAILED: $dir" >> build-failures.txt
              (cd "$dir" && cargo build --all-targets 2>&1 | sed 's/^/    /') >> build-failures.txt || true
            fi
          done

          if [ "$any_manifest" = false ]; then
            echo "No Cargo.toml files found in repo." && exit 0
          fi

          # Commit any cargo fix edition manifest edits or other changes
          if ! git diff --quiet; then
            git add -A
            git commit -m "chore(ci): apply cargo fix --edition and related changes" || true
            echo "committed_changes=true" >> $GITHUB_ENV
          else
            echo "committed_changes=false" >> $GITHUB_ENV
          fi

          if [ -f build-failures.txt ]; then
            echo "build_failures=true" >> $GITHUB_ENV
            git add build-failures.txt || true
            git commit -m "chore(ci): add build-failures.txt for edition migration" || true
          else
            echo "build_failures=false" >> $GITHUB_ENV
          fi

      - name: Create PR for edition fixes or diagnostics
        id: create_pr
        uses: peter-evans/create-pull-request@v7.0.8
        if: ${{ env.committed_changes == 'true' || env.build_failures == 'true' }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(ci): edition migration & compatibility fixes"
          branch: ${{ env.BRANCH_PREFIX }}-${{ github.run_id }}
          title: "chore: Edition migration & compatibility fixes"
          body: |
            Automated edition migration and compatibility fixes (cargo fix --edition).
            committed_changes: ${{ env.committed_changes }}
            build_failures: ${{ env.build_failures }}

      - name: "GenAI: Summarize & Patch (edition)"
        if: ${{ env.OPENAI_API_KEY != '' && steps.create_pr.outputs.pull_request_number != '' }}
        uses: dlidstrom/genai-code-review@v3.0.8
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          github_pr_id: ${{ steps.create_pr.outputs.pull_request_number }}
          mode: patch
          language: en
          openai_model: "gpt-3.5-turbo"
          openai_temperature: 0.2
          openai_max_tokens: 2048
          custom_prompt: |
            The repository attempted an edition migration and automatic fixes. The PR includes any changes and may include build failure details.
            Provide a minimal unified patch (git diff) that corrects the compile errors and makes the code build under the target edition. Prefer only `.rs` and small helper/build file changes.
        continue-on-error: true
